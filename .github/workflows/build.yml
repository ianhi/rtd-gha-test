name: PR Build Wheel

on:
  pull_request:
  push:
    branch:
      main

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install build dependencies
        run: python -m pip install --upgrade pip build

      - name: Build wheel
        run: python -m build --wheel

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheel
          path: dist/*.whl

  trigger-docs:
    runs-on: ubuntu-latest
    needs: build-wheel
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Only trigger docs if tests pass.
      - name: Webhook
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.RTDS_WEBHOOK_URL }}
          headers: '{"repository": "joelwmale/webhook-action"}'
          body: '{"event": "deployment", "repository": "joelwmale/webhook-action"}'
          github_event_payload: true
      # - name: Trigger RTDs build
      #   uses: dfm/rtds-action@v1
      #   with:
      #     webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
      #     webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
      #     commit_ref: ${{ github.ref }}

      # - name: Trigger RTD Build
      #   run: |
      #     curl -X POST https://readthedocs.org/api/v2/webhook/rtd-gha-test/294297/ \
      #       -H "Content-Type: application/json" \
      #       -d '{"version": "latest"}'
      
      # Optionally, add steps here to poll the build status and update a GitHub status or post a comment.
      # For example, using a script to poll RTD API and then calling the GitHub API:
      # - name: Poll Build Status and Update PR Check
      #   run: |
      #     # Your custom logic here to poll the RTD API and then update the commit status
      #     # using GitHub's Status API (via curl or a dedicated action)

